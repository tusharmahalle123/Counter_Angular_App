name: Build and Push to ECR

on:
  push:
    branches:
      - release/*
      - development

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Run Unit Tests
        run: npm run test -- --watch=false --no-progress --browsers=ChromeHeadless

      - name: Get commit SHA
        id: vars
        run: echo "COMMIT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      # Configure AWS credentials here
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Build Docker image
      - name: Build Docker image
        run: |
          IMAGE_NAME="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/build-images/my-images:${{ env.COMMIT_SHA }}"
          docker build -t $IMAGE_NAME -f ./path/to/Dockerfile .

      # Save the Docker image as an artifact if needed
      - name: Save Docker image as artifact
        run: |
          docker save -o my_image.tar $IMAGE_NAME
      - uses: actions/upload-artifact@v3
        with:
          name: built-image
          path: my_image.tar

  push:
    needs: build  # Ensures the push job runs after the build job
    runs-on: ubuntu-latest

    steps:
      - name: Download built image
        uses: actions/download-artifact@v3
        with:
          name: built-image

      # Configure AWS credentials again since this is a different job
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push Docker image to ECR
        run: |
          IMAGE_NAME="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/build-images/my-images:${{ env.COMMIT_SHA }}"
          docker push $IMAGE_NAME
